##############################################################################
#
# Deploy
#   This is the GitHub Action configuration file for deploying the application
#   to the virtual private server. This action will automatically be performed
#   whenever changes are pushed to the production branche.
#
##############################################################################

# Name this GitHub Action.
name: Deploy

# Here we can define when we want this action to happen. We currently want this
# specific action to run only when changes are pushed to the production branch.
on:
  push:
    branches:
    - production

jobs:

  # Run tests for the client service.
  test-client:
    name: Test client

    # Use the same environment we use in the client service's docker container.
    runs-on: ubuntu-latest
    container: node:17-alpine

    steps:
    - name: "Checkout repository"
      uses: actions/checkout@v3

    - name: "Install package manager"
      run: npm i -g npm@latest

    - name: "Install client dependencies"
      uses: bahmutov/npm-install@v1
      with:
        working-directory: client

    - name: "Run client tests"
      run: npm test
      working-directory: client

  # Deploy the application to the virtual private server.
  deploy:
    name: Build and deploy the application.
    runs-on: ubuntu-latest

    # Only run this job if the test jobs were run successfully.
    needs: test-client

    steps:
    - name: Copy repository to VPS
      uses: appleboy/scp-action@master
      env:
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USER }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.KEY }}
      with:
        source: "."
        target: "/var/www/tasks"

    - name: Build and run new images on VPS
      uses: appleboy/ssh-action@master
      with:
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USER }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.KEY }}
        script: |
          cd /var/www/tasks
          docker-compose up -d --build